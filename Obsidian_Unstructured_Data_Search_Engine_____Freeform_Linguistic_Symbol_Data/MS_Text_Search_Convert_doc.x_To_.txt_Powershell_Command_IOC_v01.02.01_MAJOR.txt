--Powershell Command Script
--This script converts all Microsoft Word documents in a specific folder location, into Text files.
--It should be executed as dynamic SQL from within the Obsidian fragment thesaurus data import T-SQL query.
--Please see the accompanying Dynamic SQL Guidance file for more information on how to do this.
--It is recommended that the $File_Path variable here be set, using dynamic SQL, to that of the @File_Path variable in the fragment thesaurus data import T-SQL script in the accompanying Obsidian repository.
--Once the Microsoft Word documents have been converted to Text files, they will be moved to the Archive folder in the same $File_Path.
--If running this Powershell command manually, in the console, please remember to update $File_Path and $Archive_File_Path, and make sure both of them include a trailing backslash (\).


$File_Path = "C:\Temp\Fragment_Thesaurus_Data\"
$Archive_File_Path = "C:\Temp\Fragment_Thesaurus_Data\Archive\"
if (-not (Test-Path $Archive_File_Path)) {
   try {md $Archive_File_Path}
   catch {}
}
$Ftype = $File_Path + "*.docx"
$NewSuffix = ".txt"
##  Invoke Word application
##
$word_app = New-Object -ComObject Word.Application
$word_app.visible = $False
##
##  Get the files from the folder
##
$files = Get-ChildItem $Ftype
##
##  Process each file - open in Word and save as Text in file path folder
##  then archives original Word file in the archive folder
##
ForEach ($file in $files) { 
    $d2 = $file.name
    $Get_Formatted_Date = get-date -format 'yyyy_MM_d__HH.mm.ss'
    $File_Archive_Name_Ending = "_Archived_" + $Get_Formatted_Date + ".docx"
    $Out = $File_Path + $d2 -replace ".{5}$", $NewSuffix
    $document = $word_app.Documents.Open($file.fullname)
    $document.SaveAs($Out, 7)
    ##The numeric value after the comma in the line above is the format setting for the converted/save file.
    $document.Close()
    $Dcounter = $Dcounter + 1
    $Wcounter = $Wcounter + 1
    Copy $file.fullname $Archive_File_Path
    Rename-Item ($Archive_File_Path + $file.name) -NewName ($file.name -replace ".{5}$", $File_Archive_Name_Ending)
    Del $file.fullname
}
$word_app.Quit()