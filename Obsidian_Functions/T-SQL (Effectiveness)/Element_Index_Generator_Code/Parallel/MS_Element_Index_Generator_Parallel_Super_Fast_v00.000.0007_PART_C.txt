--The following few codeblocks generates a set of element indexes which increment by one.
Declare @Index_Count BigInt
Set @Index_Count = 9999


--(Data Validation)
--(@Index_Count)
If @Index_Count Is Null GoTo Invalid_Index_Count_Parameter_Value
If Len(@Index_Count) = 0 GoTo Invalid_Index_Count_Parameter_Value
If @Index_Count = ' '  GoTo Invalid_Index_Count_Parameter_Value
If @Index_Count = ''  GoTo Invalid_Index_Count_Parameter_Value


--(Internal Variables)
Declare @Number_Seeds As Obsidian_Element_Index_Generator_Code_Number_Seeds_Parallel_Super_Fast
Insert Into @Number_Seeds ([Number_Seed])
Values
	('0'),
	('1'),
	('2'),
	('3'),
	('4'),
	('5'),
	('6'),
	('7'),
	('8'),
	('9')

Declare @Element_Index As Table ([Element_Index] Nvarchar(Max))


--The following codeblocks produce dynamically structured code in order to generate a single column table of increasing integer index values.
Declare @Dynamic_SQL_1 Nvarchar(Max)
Set @Dynamic_SQL_1 = N'(Select dbo.Obsidian_Element_Index_Generator_Parallel_Super_Fast_Code(@Parameter_1))'

Declare @Dynamic_SQL_Parameter_Definition_1 Nvarchar(Max)
Set @Dynamic_SQL_Parameter_Definition_1 = N'@Parameter_1 BigInt'

Declare @Dynamic_SQL_Intermediate_Table_Variable_1 Table ([Intermediate_SQL] Nvarchar(Max))
Insert Into @Dynamic_SQL_Intermediate_Table_Variable_1 ([Intermediate_SQL])
Execute sp_executesql @Dynamic_SQL_1, @Dynamic_SQL_Parameter_Definition_1, @Parameter_1 = @Index_Count

Declare @Dynamic_SQL_Data_Intermediate_Variable Nvarchar(Max)
Set @Dynamic_SQL_Data_Intermediate_Variable = (Select Replace([Intermediate_SQL], '@Index_Count', @Index_Count) From @Dynamic_SQL_Intermediate_Table_Variable_1)

Declare @Obsidian_Data_Element_Index Table ([Element_Index] Nvarchar(Max))
Insert Into @Obsidian_Data_Element_Index ([Element_Index]) --You could just use an existing table of integers here, which would greatly speed up the query for big data applications where for example billions, trillions, or quadrillions of integers are needed on a daily basis.
Execute sp_executesql @Dynamic_SQL_Data_Intermediate_Variable, N' @Number_Seeds Obsidian_Element_Index_Generator_Code_Number_Seeds_Parallel_Super_Fast ReadOnly', @Number_Seeds

Select
	Cast([Element_Index] As BigInt) As [Element_Index]
From @Obsidian_Data_Element_Index
Return


Invalid_Index_Count_Parameter_Value:
Insert Into @Element_Index ([Element_Index])
Values ('The first input parameter (@Index_Count), is out of scope for one of the following reasons... It is either null, is of zero length, is a space, or is empty.')
Return